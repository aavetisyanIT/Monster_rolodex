{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/search-box.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGe,SAASA,EAAKC,GAC5B,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEJ,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,WCPN,SAASC,EAASR,GAChC,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAACL,EAAD,CAAuBK,QAASA,GAArBA,EAAQC,S,MCLR,SAASM,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChD,OACC,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,I,ICJQG,E,kDACpB,aAAe,IAAD,8BACb,gBAcDH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IALD,E,qDASd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO3C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC/CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAK9B,UAAU,MAAf,UACC,iDACA,cAACU,EAAD,CACCC,YAAY,kBACZC,aAAce,KAAKf,eAEpB,cAACL,EAAD,CAAUC,SAAUoB,W,GAhCSI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb7a64f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport default function Card(props) {\r\n\treturn (\r\n\t\t<div className='card-container'>\r\n\t\t\t<img\r\n\t\t\t\talt='monster'\r\n\t\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n\t\t\t/>\r\n\t\t\t<h2>{props.monster.name}</h2>\r\n\t\t\t<p>{props.monster.email}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport Card from './card.component';\r\n\r\nexport default function CardList(props) {\r\n\treturn (\r\n\t\t<div className='card-list'>\r\n\t\t\t{props.monsters.map(monster => (\r\n\t\t\t\t<Card key={monster.id} monster={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport default function SearchBox({ placeholder, handleChange }) {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName='search'\r\n\t\t\ttype='search'\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tonChange={handleChange}\r\n\t\t/>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/card-list/search-box.component';\n\nexport default class App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase()),\n\t\t);\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monster Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters}></CardList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}